{"version":3,"sources":["webpack://50_projects/./src/index.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,MAAa,aAAa;IAMtB;QAJQ,eAAU,GAAG,QAAQ,CAAC,aAAa,CAAC,sBAAsB,CAAmB,CAAC;QAC9E,SAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,gBAAgB,CAAmB,CAAC;QAClE,SAAI,GAAG,CAAC,CAAC;QAGb,IAAI,CAAC,IAAI,EAAE,CAAC;IAChB,CAAC;IAEM,MAAM,KAAK,QAAQ;QACtB,IAAI,aAAa,CAAC,SAAS,KAAK,IAAI,EAAE;YAClC,aAAa,CAAC,SAAS,GAAG,IAAI,aAAa,EAAE,CAAC;SACjD;QACD,OAAO,aAAa,CAAC,SAAS,CAAC;IACnC,CAAC;IAED,IAAI;QACA,MAAM,KAAK,GAAG,WAAW,CAAC,GAAG,EAAE;YAC3B,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,IAAI,CAAC,IAAI,EAAE,CAAC;YAEZ,IAAI,IAAI,CAAC,IAAI,KAAK,GAAG;gBAAE,aAAa,CAAC,KAAK,CAAC,CAAC;QAChD,CAAC,EAAE,EAAE,CAAC,CAAC;IACX,CAAC;IAED,WAAW;QACP,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,GAAG,QAAQ,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC;IACrF,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;IACvE,CAAC;IAED,UAAU;QACN,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC;IAC1C,CAAC;IAED,KAAK,CAAC,MAAc,EAAE,KAAa,EAAE,KAAa,EAAE,MAAc,EAAE,MAAc;QAC9E,OAAO,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC,GAAG,MAAM,CAAC;IAC7E,CAAC;;AA1CL,sCA2CC;AA1CkB,uBAAS,GAAyB,IAAI,CAAC;AA4C1D,aAAa,CAAC,QAAQ,CAAC","file":"bundle.js","sourcesContent":["export class BlurryLoading {\n    private static _instance: BlurryLoading | null = null;\n    private background = document.querySelector('.loading__background') as HTMLDivElement;\n    private text = document.querySelector('.loading__text') as HTMLDivElement;\n    private load = 0;\n\n    private constructor() {\n        this.init();\n    }\n\n    public static get instance(): BlurryLoading {\n        if (BlurryLoading._instance === null) {\n            BlurryLoading._instance = new BlurryLoading();\n        }\n        return BlurryLoading._instance;\n    }\n\n    init(): void {\n        const timer = setInterval(() => {\n            this.unBlurImage();\n            this.hideText();\n            this.updateText();\n            this.load++;\n\n            if (this.load === 100) clearInterval(timer);\n        }, 50);\n    }\n\n    unBlurImage(): void {\n        this.background.style.filter = `blur(${this.scale(this.load, 0, 100, 30, 0)}px)`;\n    }\n\n    hideText(): void {\n        this.text.style.opacity = `${this.scale(this.load, 0, 100, 1, 0)}`;\n    }\n\n    updateText(): void {\n        this.text.innerHTML = `${this.load}%`;\n    }\n\n    scale(number: number, inMin: number, inMax: number, outMin: number, outMax: number): number {\n        return ((number - inMin) * (outMax - outMin)) / (inMax - inMin) + outMin;\n    }\n}\n\nBlurryLoading.instance;\n"],"sourceRoot":""}