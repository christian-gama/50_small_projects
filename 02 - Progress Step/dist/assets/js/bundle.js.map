{"version":3,"sources":["webpack://50_projects/./src/index.ts"],"names":[],"mappings":";;;;;;;AAAA,MAAM,qBAAqB;IAMvB;QACI,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,aAAa,CAAC,qBAAqB,CAAC,CAAC;QACjE,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,gBAAgB,CAAC,wBAAwB,CAAC,CAAC;QACnE,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,gBAAgB,CAAC,gDAAgD,CAAC,CAAC;QAC3F,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;IACzB,CAAC;IAED,iBAAiB;QACb,IAAI,IAAI,CAAC,OAAO,EAAE;YACd,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,EAAE;gBAC5B,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC;YACtE,CAAC,CAAC,CAAC;SACN;IACL,CAAC;IAED,YAAY,CAAC,MAAyB;QAClC,MAAM,CAAC,EAAE,KAAK,qBAAqB,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;QAE9E,IAAI,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;YAChE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC;SAC/D;QAED,IAAI,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,MAAM,CAAC,EAAE,KAAK,yBAAyB,EAAE;YAClE,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC;SAC1B;QAED,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,MAAM,CAAC,EAAE,KAAK,qBAAqB,EAAE;YAChF,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC;SAC1B;QAED,OAAO,IAAI,CAAC,UAAU,EAAE,CAAC;IAC7B,CAAC;IAED,UAAU;QACN,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;YACnC,IAAI,IAAI,CAAC,WAAW,GAAG,KAAK;gBAAE,OAAO,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;YAC3F,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,+BAA+B,CAAC,CAAC;QAC7D,CAAC,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,cAAc,EAAE,CAAC;IACjC,CAAC;IAED,cAAc;QACV,IAAI,IAAI,CAAC,WAAW,EAAE;YAClB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC;SACnG;IACL,CAAC;CACJ;AAED,MAAM,WAAW,GAAG,IAAI,qBAAqB,EAAE,CAAC;AAChD,WAAW,CAAC,iBAAiB,EAAE,CAAC","file":"bundle.js","sourcesContent":["class ProgressStepComponent {\n    private progressBar: HTMLDivElement | null;\n    private circles: NodeListOf<HTMLDivElement>;\n    private buttons: NodeListOf<HTMLButtonElement>;\n    private currentStep;\n\n    constructor() {\n        this.progressBar = document.querySelector('.progress-step__bar');\n        this.circles = document.querySelectorAll('.progress-step__circle');\n        this.buttons = document.querySelectorAll('#progress-step__previous, #progress-step__next');\n        this.currentStep = 1;\n    }\n\n    addEventToButtons(): void {\n        if (this.buttons) {\n            this.buttons.forEach((button) => {\n                button.addEventListener('click', () => this.toggleButton(button));\n            });\n        }\n    }\n\n    toggleButton(button: HTMLButtonElement): void {\n        button.id === 'progress-step__next' ? this.currentStep++ : this.currentStep--;\n\n        if (this.currentStep > 1 && this.currentStep < this.circles.length) {\n            this.buttons.forEach((button) => (button.disabled = false));\n        }\n\n        if (this.currentStep <= 1 && button.id === 'progress-step__previous') {\n            button.disabled = true;\n        }\n\n        if (this.currentStep >= this.circles.length && button.id === 'progress-step__next') {\n            button.disabled = true;\n        }\n\n        return this.updateStep();\n    }\n\n    updateStep(): void {\n        this.circles.forEach((circle, index) => {\n            if (this.currentStep > index) return circle.classList.add('progress-step__circle--active');\n            circle.classList.remove('progress-step__circle--active');\n        });\n\n        return this.updateProgress();\n    }\n\n    updateProgress(): void {\n        if (this.progressBar) {\n            this.progressBar.style.width = `${((this.currentStep - 1) / (this.circles.length - 1)) * 100}%`;\n        }\n    }\n}\n\nconst progressBar = new ProgressStepComponent();\nprogressBar.addEventToButtons();\n"],"sourceRoot":""}